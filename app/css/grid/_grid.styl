@import '_s-grid-settings'
@import '_s-grid-functions'
@import '_s-grid-classes'
@import '../variable/config/_config.styl'


// config
// Flex order
for $item in (1..8)
	.order-{$item}
		order $item
	for $windowSizeItem in $windowSize
		.{$windowSizeItem[0]}__order-{$item}
			@media only screen and (max-width: $windowSizeItem[1]px)
				order $item
// Flex order === end
// config === end

.g
	display: grid

.g-inline
	display: inline-grid

.g-afc
	grid-auto-flow column

.g-afr
	grid-auto-flow row


.g-between
	justify-content space-between
	align-items center
	flex-wrap wrap

.f
	display: flex

.f-grow
	flex-grow 1

.fw
	flex-wrap wrap

.f-column
	flex-flow column

.f-mid
	align-items center
	justify-content center

.f-aic
	align-items center

.f-aife
	align-items: flex-end

.f-aifs
	align-items: flex-start

.f-between
	align-items center
	justify-content space-between

.f-jcsb
	justify-content space-between

.f-jcc
	justify-content center

.f-jcfe
	justify-content flex-end

.f-jcfs
	justify-content flex-start

.alignSelf-fs
	align-self: flex-start

.alignSelf-fe
	align-self: flex-end

.dib
	display inline-block

.di
	display: inline

// Visible mobile
for $windowSizeItem in $windowSize
	.{$windowSizeItem[0]}__hide
		@media only screen and (max-width: $windowSizeItem[1]px)
			display none!important
	.{$windowSizeItem[0]}__show
		@media only screen and (min-width: ($windowSizeItem[1]+1)px)
			display none!important
// Visible mobile === end

//START GRID
$gridList = (1..12)

for $gridListItem in $gridList
	.g-{$gridListItem}
		grid-template-columns: repeat($gridListItem, 1fr)

for $windowSizeItem in $windowSize
	for $gridListItem in $gridList
		.{$windowSizeItem[0]}__g-{$gridListItem}
			@media only screen and (max-width: $windowSizeItem[1]px)
					grid-template-columns: repeat($gridListItem, 1fr)

.row
	display: grid
	grid-template-columns: repeat(12, 1fr)

for num in (1..12)
	for numEl in (1..12)
		.g-{num}-{numEl}
			grid-column num / numEl+1

for $windowSizeItem in $windowSize
	for num in (1..12)
		for numEl in (1..12)
			.{$windowSizeItem[0]}__g-{num}-{numEl}
				@media only screen and (max-width: $windowSizeItem[1]px)
					grid-column num / numEl+1
// END GRID

// Flex-wrap
for $windowSizeItem in $windowSize
	.{$windowSizeItem[0]}__fw
		@media only screen and (max-width: $windowSizeItem[1]px)
			flex-wrap wrap
// Flex-wrap  === end


// calc width
for itemWidth in (1..20)
	.w{itemWidth*5}
		width (itemWidth*5) %
	for $windowSizeItem in $windowSize
		.{$windowSizeItem[0]}__w{itemWidth*5}
			@media only screen and (max-width: $windowSizeItem[1]px)
					width (itemWidth*5) %

//width-max container size
$listWmax = (712)

for itemListWmax in $listWmax
	.wmax-{itemListWmax}
		max-width itemListWmax px
		width: 100%
// calc width === end


// Flex state items
$flexState = ("f-aic" "align-items" center),\
							("f-aife" "align-items" flex-end),\
							("f-aifs" "align-items" flex-start),\
							("f-asfs" "align-self" flex-start),\
							("f-asfe" "align-self" flex-end),\
							("f-asc" "align-self" center),\
							("f-jcsb" "justify-content" space-between),\
							("f-jcc" "justify-content" center),\
							("f-jcfe" "justify-content" flex-end),\
							("f-jcfs" "justify-content" flex-start),\
							("f-grow" "flex-grow" 1),\
							("fw" "flex-wrap" wrap),\
							("f-col" "flex-direction" column),\
							("f-row" "flex-direction" row)

for $flexStateItem in $flexState
	.{$flexStateItem[0]}
		{$flexStateItem[1]} $flexStateItem[2]
	for $windowSizeItem in $windowSize
		.{$windowSizeItem[0]}__{$flexStateItem[0]}
			@media only screen and (max-width: $windowSizeItem[1]px)
				{$flexStateItem[1]} $flexStateItem[2]

// Flex state items === end